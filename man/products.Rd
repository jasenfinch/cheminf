% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/metabolite_database.R
\name{calcAdducts}
\alias{calcAdducts}
\alias{calcAdducts,MetaboliteDatabase-method}
\alias{PIPsearch}
\alias{PIPsearch,MetaboliteDatabase-method}
\title{Ionisation product searches of a metabolite database}
\usage{
calcAdducts(db, id, adduct_rules_table = adduct_rules())

\S4method{calcAdducts}{MetaboliteDatabase}(db, id, adduct_rules_table = adduct_rules())

PIPsearch(
  db,
  mz,
  adduct,
  ppm = 6,
  isotope = NA,
  adduct_rules_table = adduct_rules(),
  isotope_rules_table = isotope_rules()
)

\S4method{PIPsearch}{MetaboliteDatabase}(
  db,
  mz,
  adduct,
  ppm = 6,
  isotope = NA,
  adduct_rules_table = adduct_rules(),
  isotope_rules_table = isotope_rules()
)
}
\arguments{
\item{db}{S4 object of class \code{MetaboliteDatabase}}

\item{id}{Database entry ID}

\item{adduct_rules_table}{table containing adduct formation rules. Defaults to \code{adduct_rules()}.}

\item{mz}{mass to charge ratio to search}

\item{adduct}{the search adduct as available in \code{mzAnnotation::adduct_names()}}

\item{ppm}{the parts per million error search threshold}

\item{isotope}{the search isotope as available in \code{mzAnnotation::isotope_names()}}

\item{isotope_rules_table}{table containing isotope rules. Defaults to \code{isotope_rules()}.}
}
\value{
A tibble containing the relevant product search results depending on the method used.
}
\description{
Methods for metabolite database ionisation product searches
}
\details{
\itemize{
\item \code{PIPsearch} - perform a putative ionisation product search on a metabolite database
\item \code{calcAdducts} - calculate adduct mass to charge ratios for a metabolite database entry
}
}
\examples{
metabolite_database <- metaboliteDB(amino_acids)

## Perform a putative ionisation product search
PIPsearch(
  metabolite_database,
  mz = 133.03358,
  adduct = '[M-H]1-',
  isotope = '13C')

## Calculate adduct m/z for a database entry
calcAdducts(metabolite_database,1)

}
